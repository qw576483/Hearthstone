//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.Cards
{ 

public sealed partial class Card :  Bright.Config.BeanBase 
{
    public Card(JSONNode _json) 
    {
        { if(!_json["id"].IsNumber) { throw new SerializationException(); }  Id = _json["id"]; }
        { if(!_json["image"].IsString) { throw new SerializationException(); }  Image = _json["image"]; }
        { if(!_json["set"].IsNumber) { throw new SerializationException(); }  Set = _json["set"]; }
        { if(!_json["quality"].IsNumber) { throw new SerializationException(); }  Quality = _json["quality"]; }
        { if(!_json["type"].IsNumber) { throw new SerializationException(); }  Type = (Cards.ECardType)_json["type"].AsInt; }
        { if(!_json["cost"].IsNumber) { throw new SerializationException(); }  Cost = _json["cost"]; }
        { if(!_json["attack"].IsNumber) { throw new SerializationException(); }  Attack = _json["attack"]; }
        { if(!_json["health"].IsNumber) { throw new SerializationException(); }  Health = _json["health"]; }
        { if(!_json["name"].IsString) { throw new SerializationException(); }  Name = _json["name"]; }
        { if(!_json["cnname"].IsString) { throw new SerializationException(); }  Cnname = _json["cnname"]; }
        { if(!_json["cndescription"].IsString) { throw new SerializationException(); }  Cndescription = _json["cndescription"]; }
        { if(!_json["description"].IsString) { throw new SerializationException(); }  Description = _json["description"]; }
        { if(!_json["classs"].IsNumber) { throw new SerializationException(); }  Classs = _json["classs"]; }
        { if(!_json["race"].IsNumber) { throw new SerializationException(); }  Race = _json["race"]; }
        { if(!_json["durability"].IsNumber) { throw new SerializationException(); }  Durability = _json["durability"]; }
        PostInit();
    }

    public Card(int id, string image, int set, int quality, Cards.ECardType type, int cost, int attack, int health, string name, string cnname, string cndescription, string description, int classs, int race, int durability ) 
    {
        this.Id = id;
        this.Image = image;
        this.Set = set;
        this.Quality = quality;
        this.Type = type;
        this.Cost = cost;
        this.Attack = attack;
        this.Health = health;
        this.Name = name;
        this.Cnname = cnname;
        this.Cndescription = cndescription;
        this.Description = description;
        this.Classs = classs;
        this.Race = race;
        this.Durability = durability;
        PostInit();
    }

    public static Card DeserializeCard(JSONNode _json)
    {
        return new Cards.Card(_json);
    }

    /// <summary>
    /// 这是id
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// Texture name
    /// </summary>
    public string Image { get; private set; }
    /// <summary>
    /// 名字
    /// </summary>
    public int Set { get; private set; }
    /// <summary>
    /// 品质
    /// </summary>
    public int Quality { get; private set; }
    /// <summary>
    /// 类型
    /// </summary>
    public Cards.ECardType Type { get; private set; }
    /// <summary>
    /// 费用
    /// </summary>
    public int Cost { get; private set; }
    /// <summary>
    /// 攻击力
    /// </summary>
    public int Attack { get; private set; }
    /// <summary>
    /// 血量
    /// </summary>
    public int Health { get; private set; }
    /// <summary>
    /// 名称
    /// </summary>
    public string Name { get; private set; }
    /// <summary>
    /// 名称
    /// </summary>
    public string Cnname { get; private set; }
    /// <summary>
    /// 描述
    /// </summary>
    public string Cndescription { get; private set; }
    /// <summary>
    /// 描述
    /// </summary>
    public string Description { get; private set; }
    public int Classs { get; private set; }
    public int Race { get; private set; }
    public int Durability { get; private set; }

    public const int __ID__ = -801029381;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Image:" + Image + ","
        + "Set:" + Set + ","
        + "Quality:" + Quality + ","
        + "Type:" + Type + ","
        + "Cost:" + Cost + ","
        + "Attack:" + Attack + ","
        + "Health:" + Health + ","
        + "Name:" + Name + ","
        + "Cnname:" + Cnname + ","
        + "Cndescription:" + Cndescription + ","
        + "Description:" + Description + ","
        + "Classs:" + Classs + ","
        + "Race:" + Race + ","
        + "Durability:" + Durability + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
