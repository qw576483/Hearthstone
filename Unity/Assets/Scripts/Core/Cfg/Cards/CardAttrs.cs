//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace Cfg.Cards
{ 

public sealed partial class CardAttrs :  Bright.Config.BeanBase 
{
    public CardAttrs(JSONNode _json) 
    {
        { if(!_json["id"].IsNumber) { throw new SerializationException(); }  Id = _json["id"]; }
        { if(!_json["cost"].IsNumber) { throw new SerializationException(); }  Cost = _json["cost"]; }
        { if(!_json["attack"].IsNumber) { throw new SerializationException(); }  Attack = _json["attack"]; }
        { if(!_json["health"].IsNumber) { throw new SerializationException(); }  Health = _json["health"]; }
        { if(!_json["durability"].IsNumber) { throw new SerializationException(); }  Durability = _json["durability"]; }
        PostInit();
    }

    public CardAttrs(int id, int cost, int attack, int health, int durability ) 
    {
        this.Id = id;
        this.Cost = cost;
        this.Attack = attack;
        this.Health = health;
        this.Durability = durability;
        PostInit();
    }

    public static CardAttrs DeserializeCardAttrs(JSONNode _json)
    {
        return new Cards.CardAttrs(_json);
    }

    /// <summary>
    /// 这是id
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 费用
    /// </summary>
    public int Cost { get; private set; }
    /// <summary>
    /// 攻击力
    /// </summary>
    public int Attack { get; private set; }
    /// <summary>
    /// 血量
    /// </summary>
    public int Health { get; private set; }
    public int Durability { get; private set; }

    public const int __ID__ = -2142054809;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Cost:" + Cost + ","
        + "Attack:" + Attack + ","
        + "Health:" + Health + ","
        + "Durability:" + Durability + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
